<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.laofuzi.book.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.laofuzi.book.entity.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="address_id" property="addressId" jdbcType="BIGINT" />
    <result column="account" property="account" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="deliver_time" property="deliverTime" jdbcType="BIGINT" />
    <result column="receive_time" property="receiveTime" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="is_vailed" property="isVailed" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, address_id, account, status, deliver_time, receive_time, create_time, 
    update_time, version, is_vailed
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    FROM  `order`
  </select>
    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
      select
      <include refid="Base_Column_List"/>
      FROM  `order`
      where user_id = user_id = #{userId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `order`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.laofuzi.book.entity.Order" useGeneratedKeys="true" keyProperty="id">
    insert
    into
    `order` (id, user_id, address_id,
      account, status, deliver_time, 
      receive_time, create_time, update_time, 
      version, is_vailed)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{addressId,jdbcType=BIGINT}, 
      #{account,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{deliverTime,jdbcType=BIGINT},
      #{receiveTime,jdbcType=BIGINT},  UNIX_TIMESTAMP(NOW(3)) * 1000, UNIX_TIMESTAMP(NOW(3)) * 1000,
      0, 1)
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.laofuzi.book.entity.Order" >
    update `order`
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=BIGINT},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="deliverTime != null" >
        deliver_time = #{deliverTime,jdbcType=INTEGER},
      </if>
      <if test="receiveTime != null" >
        receive_time = #{receiveTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="isVailed != null" >
        is_vailed = #{isVailed,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>